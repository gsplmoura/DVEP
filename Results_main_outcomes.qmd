---
title: "Main outcomes"
author: "S.P.L.M., Gustavo"
date: today
format:
  html:
    toc: true
    toc-depth: 2
    toc-float:
      collapsed: false
      smooth-scroll: true
  pdf:
    toc: true
    toc-depth: 2
    pdf-engine: xelatex
---

# Getting started

## Load data

```{r}
rm(list = ls())
graphics.off()
cat("\014")  # Clear any pending RStudio sessions or temporary files

# Load functions from external script
source("helper_functions.R")

## Load necessary libraries
library(tidyverse)
library(readxl)
library(lubridate)
library(stringr)
library(purrr)
library(here)
library(lme4)
library(lmerTest)
library(skimr)
library(performance)

# Read Files ----
## Codebooks
codebook_dvep <- read_excel(
    "Codebooks/codebook_dvep.xlsx",
    col_names = TRUE,
    col_types = NULL,
    na = c("", "NA", "NI", "UNK", "NASK", "ASKU", "INV"),
    trim_ws = TRUE,
    skip = 0, # Number of lines to skip before reading data
    n_max = Inf, # Maximum number of lines to read.
    guess_max = 1000
) %>%
    arrange(index)

codebook_structure  <- read_csv(
    "Codebooks/codebook_structure.csv",
    col_names = TRUE)

codebook_ncit  <- read_csv(
    "Codebooks/codebook_ncit.csv",
    col_names = TRUE)

codebook_bia <- read_excel(
    "Codebooks/codebook_bia.xlsx",
    col_names = TRUE,
    col_types = NULL,
    na = c("", "NA", "NI", "UNK", "NASK", "ASKU", "INV"),
    trim_ws = TRUE,
    skip = 0, # Number of lines to skip before reading data
    n_max = Inf, # Maximum number of lines to read.
    guess_max = 1000
) %>%
    arrange(index)

## Data
data <- readRDS("Data_processed/data.rds")
data_bia <- readRDS("Data_processed/data_bia.rds")
data_bia_D1 <- readRDS("Data_processed/data_bia_D1.rds")
data_bia_D1_mean <- readRDS("Data_processed/data_bia_D1_mean.rds")
data_bia_D1_raw <- readRDS("Data_processed/data_bia_D1_raw.rds")
data_bia_D3 <- readRDS("Data_processed/data_bia_D3.rds")
data_bia_D3_mean <- readRDS("Data_processed/data_bia_D3_mean.rds")
data_bia_D3_raw <- readRDS("Data_processed/data_bia_D3_raw.rds")
data_bia_mean <- readRDS("Data_processed/data_bia_mean.rds")
data_d1_exclusive <- readRDS("Data_processed/data_d1_exclusive.rds")
data_filtered <- readRDS("Data_processed/data_filtered.rds")
data_filtered_seca <- readRDS("Data_processed/data_filtered_seca.rds")
I21_conditions_R <- readRDS("Data_processed/I21_conditions_R.rds")
I22_drugs_R <- readRDS("Data_processed/I22_drugs_R.rds")
I27_labs_R <- readRDS("Data_processed/I27_labs_R.rds")
I29_compliance_new <- readRDS("Data_processed/I29_compliance_new.rds")
I30_events_R <- readRDS("Data_processed/I30_events_R.rds")

## SUPERTIBBLE
data_instruments <- readRDS("Data_instruments/data_instruments.rds")
```

## Variables of interest

-   (1 \| record_id) + visit + allocation_group + age + sex + race + education +
-   Comorbidities: hypertension + hypercholesterolemia + hypertrigliceridemia + insulin + drugs_w_loss + drugs_w_gain
-   Anthro: abdomen + bmi + mean_bp_mean
-   Questionnaires: whoqol_score_overall + ecap_score + evs_score + dass_score_stress + dass_score_anxiety + dass_score_depression + alcohol_significant + smoke_history + carbs_kcal + protein_kcal + fat_kcal + drugs_dose_change_yn +
-   Adesão: completed_intervention, intervention_duration, education_years? cp_taking_as_directed_yn, cp_missed_dose_yn, cp_missed_dose_count, cp_discontinued_yn, cp_discontinued_n_days, cp_ran_out_of_drug_yn, cp_medication_confidence_sca

## Select variables

```{r}
data_model <- data_filtered %>% 
    select(
        record_id:sex,
        hypertension:ecap_score,
        abdomen, bmi, mean_bp_mean,
        resistance:evs_score,
        alcohol_dose, 
        carbs_kcal, protein_kcal, fat_kcal, kcal,
        labs_crp:labs_alkp,
        labs_cholesterol:labs_quick_index
    )

saveRDS(
    data_model,
    "Data_processed/data_model.rds")

vars_to_keep <- names(data_model)

# Step 2: filter codebook_dvep
codebook_data_model <- codebook_dvep %>%
    filter(variable %in% vars_to_keep) %>% 
    select(
        variable, label_pt, field_type, choices)

saveRDS(
    codebook_data_model,
    "Data_processed/codebook_data_model.rds")
```

## Scaling

$${QUICKI} = \frac{1}{\\log(insulin) + log(glucose)}$$

$$
HOMA-IR = \frac{insulin * glucose}{405}
$$

```{r}
data_model_scaled <- data_model %>%
  mutate(across(
    .cols = c(
        duration_difference, age,
        whoqol_score_overall, dass_score_depression, dass_score_anxiety,
        dass_score_stress, ecap_score, 
        abdomen, bmi, mean_bp_mean,
        resistance, reactance, 
        handgrip, evs_score, alcohol_dose,
        carbs_kcal, protein_kcal, fat_kcal, kcal,
        labs_crp, labs_ast, labs_alt, labs_ggt, labs_alkp,
        labs_cholesterol, labs_ldl, labs_hba1c, labs_triglycerides,
        labs_hdl, labs_glucose, labs_insulin, labs_homa_ir
    ),
    .fns = ~ as.numeric(scale(.))
  ))

scaling_params <- data_model %>%
  summarise(across(
    .cols = c(
      duration_difference, age,
      whoqol_score_overall, dass_score_depression, dass_score_anxiety,
      dass_score_stress, ecap_score, 
      abdomen, bmi, mean_bp_mean,
      resistance, reactance, 
      handgrip, evs_score, alcohol_dose,
      carbs_kcal, protein_kcal, fat_kcal,
      labs_crp, labs_ast, labs_alt, labs_ggt, labs_alkp,
      labs_cholesterol, labs_ldl, labs_hba1c, labs_triglycerides,
      labs_hdl, labs_glucose, labs_insulin, labs_homa_ir
    ),
    list(mean = ~mean(., na.rm = TRUE), sd = ~sd(., na.rm = TRUE))
  )) %>%
  pivot_longer(everything(),
               names_to = c("variable", ".value"),
               names_sep = "_(?=[^_]+$)",  # 👈 this fixes the splitting
               names_transform = list(.value = as.character))
```

```{r, eval=FALSE}
# THEN, FOR NEW DATA
scale_with_params <- function(new_data, params) {
  for (i in seq_len(nrow(params))) {
    var <- params$variable[i]
    mean_val <- params$mean[i]
    sd_val <- params$sd[i]
    if (var %in% names(new_data)) {
      new_data[[var]] <- (new_data[[var]] - mean_val) / sd_val
    }
  }
  return(new_data)
}

new_data_scaled <- scale_with_params(new_data, scaling_params)
```

# Phase angle

Filtrando os dados da primeira e terceira visitas.

```{r}
pha_redcap <- data_model_scaled %>% 
    filter(
        visit %in% c(1, 3)
    ) %>% 
    mutate(
        compliance_score_visit = case_when(
            visit == 3 & completed_intervention == "Não" ~ 0,
            TRUE ~ compliance_score_visit
        )
    )
```

## Modelo 1

```{r}
pha_1 <- lmer(phase_angle ~ (1 | record_id) + visit + allocation_group + completed_intervention + duration_difference + age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia + drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score + alcohol_dose + kcal + labs_crp + labs_alt + labs_ggt + labs_ldl + labs_triglycerides + labs_hdl + labs_quick_index, data = pha_redcap)

summary(pha_1)
```

A modelagem estatística foi conduzida por meio de um modelo linear misto, com intercepto aleatório por participante (record_id), ajustado pelo método de máxima verossimilhança restrita (REML). O desfecho avaliado foi o ângulo de fase, e todas as variáveis contínuas foram previamente padronizadas (média = 0; desvio padrão = 1), com exceção do índice QUICKI, mantido em sua unidade original para favorecer a interpretabilidade clínica. A variável duration_difference representa o desvio absoluto (em dias) da duração planejada da intervenção (90 dias), sendo ajustada para zero na linha de base e posteriormente padronizada.

O modelo incluiu 24 preditores fixos e apresentou bom ajuste, com critério REML igual a 267,6 \[um valor inferior ao do modelo anterior (REML = 275)\], indicando melhora na parcimônia e qualidade do ajuste após a redução de variáveis.

**Efeitos fixos**

Três variáveis demonstraram associação estatisticamente significativa com o desfecho:

-   Pressão arterial média (mean_bp_mean): apresentou associação positiva com o ângulo de fase (β = 0,19; p = 0,045), sugerindo que níveis mais elevados de pressão arterial podem estar relacionados a melhor integridade funcional da membrana celular.
-   Dose de álcool (alcohol_dose): foi o preditor com maior significância estatística (β = 0,25; p \< 0,001), com associação positiva ao ângulo de fase. Este achado deve ser interpretado com cautela, podendo refletir fatores comportamentais, sociais ou nutricionais não diretamente capturados no modelo.
-   Proteína C reativa (labs_crp): demonstrou associação positiva marginalmente significativa (β = 0,13; p = 0,032), o que pode sugerir uma relação complexa entre inflamação subclínica e alterações na composição ou integridade celular.

As demais variáveis — incluindo visit, allocation_group, completed_intervention, duration_difference, além de variáveis laboratoriais como labs_ldl, labs_triglycerides e labs_quick_index — não apresentaram associações estatisticamente significativas com o desfecho.

**Efeitos aleatórios**

A variância associada ao intercepto aleatório por participante foi de 0,72, enquanto a variância residual foi de 0,11. Esse achado demonstra que há considerável variabilidade entre os indivíduos, reforçando a pertinência da inclusão do componente aleatório no modelo. Em outras palavras, parte substancial da variabilidade total no ângulo de fase é explicada por diferenças interindividuais, o que justifica o uso de modelos mistos para melhor estimar os efeitos fixos, controlando tais variações basais.

**Considerações metodológicas**

1.  Multicolinearidade: Dada a inclusão de 24 preditores em um modelo com 111 observações, recomenda-se avaliar a presença de colinearidade, especialmente entre variáveis clínicas e laboratoriais potencialmente redundantes. Sugere-se a aplicação da função performance::check_collinearity() para investigar VIFs elevados, que podem inflar erros padrão e comprometer a interpretação dos coeficientes.
2.  Redução de preditores: A elevada razão entre o número de preditores e o tamanho da amostra (p \> n/4) pode levar a sobreajuste (overfitting) e instabilidade nos coeficientes. Uma abordagem sugerida é a redução guiada por critérios de informação (AIC) ou penalização via regressão LASSO (glmnet), com o objetivo de selecionar subconjuntos mais estáveis de variáveis.
3.  Avaliação da qualidade do ajuste: Recomenda-se utilizar a função performance::check_model() para verificar a normalidade dos resíduos, homocedasticidade e presença de observações influentes. Além disso, a obtenção dos valores de R² marginal e condicional pode auxiliar na compreensão da proporção da variância explicada pelo modelo fixo e pelo modelo completo (incluindo os efeitos aleatórios).
4.  Tratamento da variável visit: Embora visit não tenha apresentado significância estatística no modelo atual, trata-se de uma variável importante, dado o delineamento longitudinal do estudo. Deve-se avaliar se o uso de visit como variável contínua linear é adequado ou se uma estrutura categórica com interação (e.g., visit\*allocation_group) ou a inclusão de um termo de inclinação aleatória por visita ((visit \| record_id)) poderia capturar melhor as trajetórias individuais ao longo do tempo.

**Avaliação da Multicolinearidade**

Dada a inclusão de um número elevado de preditores no modelo (n = 24), avaliou-se a presença de multicolinearidade utilizando o Fator de Inflação da Variância (VIF) por meio da função performance::check_collinearity().

```{r}
performance::check_collinearity(pha_1)
# r2(pha_1)  # Marginal and conditional R²
```

Resultados:

Todos os preditores apresentaram VIFs inferiores a 3, indicando ausência de multicolinearidade preocupante. Os valores variaram entre 1,13 e 2,64, o que representa correlações lineares fracas a moderadas entre os preditores, sem risco aparente de distorções nas estimativas dos coeficientes.

Abaixo, apresenta-se a interpretação convencional dos valores de VIF:

| **Valor de VIF** | **Interpretação**                                  |
|------------------|----------------------------------------------------|
| 1                | Ausência de correlação com outras variáveis        |
| 1–2              | Correlação baixa — sem motivo de preocupação       |
| 2–5              | Correlação moderada — acompanhar com atenção       |
| 5–10             | Correlação elevada — risco de instabilidade        |
| \> 10            | Multicolinearidade severa — intervenção necessária |

2.  Redução do Modelo

O modelo atual inclui 24 preditores fixos, o que, diante de uma amostra com 111 observações, pode comprometer o poder estatístico e a interpretabilidade dos resultados devido ao risco de sobreajuste (overfitting).

A escolha da melhor abordagem para simplificar o modelo depende do objetivo central da análise:

a)  Modelos orientados por desempenho (predição)

Caso o foco seja a performance preditiva, o uso de estratégias orientadas por dados é mais apropriado:

-   Seleção stepwise (backward) com base em critérios de informação como AIC ou BIC. O AIC favorece modelos com melhor ajuste (ainda que mais complexos), enquanto o BIC impõe maior penalidade à complexidade, favorecendo modelos mais parcimoniosos.

-   Regressão penalizada via LASSO (glmnet), que tende a selecionar subconjuntos estáveis de variáveis ao impor penalizações sobre os coeficientes, sendo especialmente útil em situações com colinearidade moderada e alta dimensionalidade de preditores.

b)  Modelos orientados por inferência e explicação

Quando o objetivo principal é a interpretação causal ou explicativa, como em estudos clínicos e intervenções, a estratégia mais robusta é a redução teórica guiada por plausibilidade clínica. Essa abordagem inclui:

-   Remoção de variáveis com baixa significância estatística e sem fundamento teórico forte;

-   Exclusão de variáveis redundantes ou fortemente correlacionadas (ex.: manter labs_quick_index e excluir glicemia/insulina);

-   Atenção a comportamentos instáveis dos coeficientes — por exemplo, quando a direção (sinal) de um coeficiente muda com a inclusão de outras variáveis, indicando colinearidade ou sobreposição de efeitos.

c)  Estratégia híbrida recomendada

Uma estratégia combinada, adequada ao contexto de ensaio clínico com múltiplas covariáveis, pode envolver: 1. Fixar um conjunto mínimo de variáveis-chave (ex.: idade, sexo, grupo de intervenção, tempo); 2. Aplicar redução stepwise ou LASSO nas demais covariáveis; 3. Comparar modelos reduzidos com o modelo completo utilizando ANOVA (anova()), gráficos de resíduos e critérios de ajuste (REML, AIC, BIC), assegurando que a simplificação não comprometa o desempenho do modelo.

3.  Avaliação do Ajuste do Modelo

A verificação dos pressupostos estatísticos do modelo pha_1 foi realizada com a função performance::check_model(). Os principais achados foram:

-   Ajuste geral: Os gráficos de verificação preditiva (posterior predictive checks) mostraram boa sobreposição entre os valores observados e os preditos, indicando adequação geral do modelo.

-   Resíduos vs. valores ajustados: Foi observado leve desvio da horizontalidade nas faixas mais altas do desfecho, sugerindo possível violação da linearidade para valores elevados do ângulo de fase.

-   Homoscedasticidade: Detectou-se aumento da variância dos resíduos com o aumento dos valores preditos, caracterizando uma leve violação da homocedasticidade.

-   Normalidade dos resíduos: Os resíduos apresentaram distribuição aproximadamente normal, com pequenas assimetrias nas caudas — aceitáveis em modelos mistos com amostras de tamanho moderado.

-   Influência de observações: Algumas observações apresentaram leve influência (IDs 10, 69, 70, 75, 109), mas nenhuma ultrapassou os limiares críticos para alavancagem ou resíduos padronizados extremos.

-   Colinearidade: Todos os VIFs estiveram abaixo de 3, indicando ausência de multicolinearidade significativa.

-   Efeitos aleatórios: A distribuição dos interceptos aleatórios (por record_id) se aproximou da normalidade, reforçando a adequação da estrutura hierárquica adotada.

5.  Refinamento da Variável visit

Dado o delineamento longitudinal do estudo, a variável visit merece atenção especial. No modelo atual, visit foi incluída como efeito fixo com estrutura linear. No entanto, isso pode ser subótimo caso o efeito do tempo varie entre participantes.

Tentativas de incorporar uma inclinação aleatória por visit resultaram em:

```         
lmer(phase_angle ~ visit + (visit | record_id), data = ...)
# Erro: número de observações (=111) ≤ número de efeitos aleatórios (=146)
```

Isso indica que há insuficiência de dados para estimar uma estrutura tão complexa. A alternativa:

```         
lmer(phase_angle ~ visit + (1 + visit || record_id), data = ...)
# Resultado: ajuste singular (boundary (singular) fit)
```

Esse ajuste singular significa que o modelo não consegue estimar a variância da inclinação aleatória para visit de forma confiável, sugerindo ausência de variação individual suficiente ou tamanho amostral limitado para suportar tal estrutura.

Conclusão:

No momento, manter visit como efeito fixo linear é estatisticamente mais robusto. Caso haja interesse em investigar mudanças específicas ao longo das visitas, uma abordagem alternativa seria tratar visit como variável categórica e incluir interações com allocation_group, por exemplo:

```         
phase_angle ~ allocation_group * factor(visit) + ...
```

Essa estrutura permite verificar se a evolução do ângulo de fase ao longo do tempo difere entre os grupos, sem sobrecarregar o modelo com componentes aleatórios instáveis.

## Modelo 2

```{r}
pha_2 <- lmer(phase_angle ~ (1 | record_id) + visit + allocation_group + age + sex + bmi + mean_bp_mean + handgrip + evs_score + kcal + labs_crp + labs_alt + labs_ggt + labs_ldl + labs_triglycerides + labs_hdl + labs_quick_index, data = pha_redcap)

summary(pha_2)
```

> AIC(pha_1, pha_2) df AIC pha_1 26 319.5554 pha_2 19 313.6283

> BIC(pha_1, pha_2) df BIC pha_1 26 390.0032 pha_2 19 365.1094

A comparação entre os modelos pelo critério de informação de Akaike (AIC) e o critério bayesiano de informação (BIC) favoreceu o modelo reduzido (pha_2), que apresentou valores mais baixos de AIC (313,6 vs. 319,6) e BIC (365,1 vs. 390,0) em relação ao modelo completo (pha_1). Isso sugere que a simplificação do modelo resultou em melhor equilíbrio entre ajuste e complexidade, mesmo com a perda de significância estatística de algumas covariáveis previamente relevantes. No entanto, várias variáveis de relevância clínica foram eliminadas neste modelo. Por este motivo, um terceiro modelo foi criado, incluindo as variáveis de relevância clínica que não foram incluídas no modelo 2.

## Modelo 3

```{r}
pha_3 <- lmer(phase_angle ~ (1 | record_id) + visit + allocation_group + completed_intervention + duration_difference + age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia + drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score + alcohol_dose + kcal + labs_crp + labs_ldl + labs_quick_index, data = pha_redcap)

summary(pha_3)

check_collinearity(pha_3)

AIC(pha_1, pha_2, pha_3)
BIC(pha_1, pha_2, pha_3)

r2(pha_3)
```

```{r pha_3_check-model, fig.width=10, fig.height=14}
pha_3_plots <- performance::check_model(pha_3)
print(pha_3_plots)
```

**Comparação entre Modelos e Avaliação do Ajuste Final**

Três modelos hierárquicos foram comparados utilizando os critérios de informação de Akaike (AIC) e Bayesiano (BIC). O modelo pha_3, contendo 22 preditores fixos e intercepto aleatório por participante (record_id), apresentou os menores valores de AIC (300,2) e BIC (359,8), superando o modelo completo pha_1 (AIC = 319,6; BIC = 390,0) e o modelo intermediário pha_2 (AIC = 313,6; BIC = 365,1). Esses resultados indicam que pha_3 representa o melhor equilíbrio entre qualidade de ajuste e parcimônia, sendo selecionado como modelo final para interpretação dos achados.

A construção do modelo pha_3 foi guiada por critérios estatísticos e clínicos, priorizando variáveis com significância nas versões anteriores, plausibilidade teórica e estabilidade das estimativas. O modelo manteve 22 preditores e apresentou um critério de máxima verossimilhança restrita (REML) igual a 256,2, inferior ao dos modelos anteriores, reforçando a melhoria no ajuste.

Entre os preditores avaliados, três variáveis mantiveram associação estatisticamente significativa com o desfecho:

-   Pressão arterial média (mean_bp_mean): β = 0,18; p = 0,040

-   Dose de álcool (alcohol_dose): β = 0,25; p \< 0,001

-   Proteína C reativa (labs_crp): β = 0,12; p = 0,035

Essas associações permaneceram robustas mesmo após ajuste multivariado, sugerindo que níveis mais elevados de pressão arterial, maior consumo de álcool e níveis mais altos de inflamação subclínica estão positivamente relacionados ao ângulo de fase. A variável visit foi mantida no modelo como controle temporal, apesar de não apresentar significância estatística (p = 0,432).

A variância do intercepto aleatório por participante permaneceu elevada (σ² = 0,68), corroborando a presença de heterogeneidade individual e justificando a estrutura mista do modelo. O R² marginal foi de 0,250, indicando que 25% da variância total do desfecho é explicada pelas variáveis fixas. Já o R² condicional foi de 0,896, refletindo a alta proporção da variância explicada ao considerar a estrutura de efeitos aleatórios, em consonância com o delineamento longitudinal do estudo.

A análise de multicolinearidade mostrou valores de VIF menor que três para todos os preditores, descartando problemas relevantes de colinearidade. Os diagnósticos do modelo indicaram distribuição adequada dos resíduos, ausência de observações altamente influentes e normalidade satisfatória dos efeitos aleatórios, corroborando a adequação do modelo ajustado.

**Verificação dos Pressupostos do Modelo Final**

A avaliação dos pressupostos do modelo pha_3 foi realizada com auxílio da função performance::check_model(), cujos gráficos diagnósticos estão apresentados na Figura X.

-   Posterior Predictive Check: Houve boa sobreposição entre os dados observados e os valores preditos pelo modelo, sugerindo adequada capacidade preditiva.

-   Linearidade: Os resíduos apresentaram tendência de curvatura em valores mais altos do desfecho, o que pode indicar leve violação do pressuposto de linearidade, mas sem evidências de distorção grave.

-   Homoscedasticidade: Detectou-se discreto aumento da variabilidade dos resíduos em faixas mais altas dos valores ajustados, sugerindo leve heterocedasticidade.

-   Normalidade dos resíduos: A distribuição dos resíduos foi aproximadamente normal, com desvios leves nas caudas, aceitáveis para modelos mistos em amostras moderadas.

-   Observações influentes: Algumas observações foram marcadas com leve alavancagem (IDs 10, 69, 70, 75, 109), mas todas permaneceram dentro dos limites aceitáveis de influência.

-   Multicolinearidade: Todos os preditores apresentaram valores de VIF inferiores a 3, afastando preocupações com colinearidade.

-   Normalidade dos efeitos aleatórios (record_id): A distribuição dos interceptos aleatórios foi próxima da normal, com leve assimetria nas extremidades, validando a escolha do modelo com intercepto aleatório.

# PCR

```{r}
data_model_scaled <- data_model_scaled %>%
  dplyr::mutate(
    compliance_score_adjusted = dplyr::case_when(
      visit == 1 ~ 1,
      TRUE ~ compliance_score_visit
    )
  ) %>%
  dplyr::relocate(compliance_score_adjusted, .after = compliance_score_visit)
```

## Per protocol

```{r pcr_1_check-model, fig.width=10, fig.height=14}
pcr_1 <- lmer(log1p(labs_crp) ~ allocation_group + compliance_score_adjusted + duration_difference + completed_intervention + visit + (1 | record_id) + age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia + drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score + alcohol_dose + kcal + labs_alt + labs_ggt + labs_ldl + labs_triglycerides + labs_hdl + labs_quick_index, data = data_model_scaled)

summary(pcr_1)

check_collinearity(pcr_1)

AIC(pcr_1)
BIC(pcr_1)

r2(pcr_1)

pcr_1_plots <- performance::check_model(pcr_1)
print(pcr_1_plots)


```

Since the goal is to evaluate whether the intervention (allocation_group) reduces inflammation (log1p(labs_crp)), then how compliance-related variables are handled — completed_intervention, compliance_score_adjusted, and duration_difference — fundamentally changes what question the model is answering.

**Key Conceptual Framework**

If we adjust for compliance variables, then we are answering the question: Among those who complied (to varying degrees), does the assigned intervention have an effect on inflammation?”. This estimates the “Effect of Treatment on the Treated” (ETT) or per-protocol effect, rather than the intention-to-treat (ITT) effect. The interpretation shifts towards whether the efficacy of the treatment holds after accounting for how well participants adhered. If participants in the intervention group did not comply, the model adjusts for that, isolating the treatment effect conditional on compliance. However, if compliance is strongly influenced by the intervention (as is common), adjusting for it may introduce **post-treatment bias (collider bias)**, because you’re conditioning on a variable that is downstream of the allocation.

If we do not adjust for compliance, then we are estimating the intention-to-treat (ITT) effect: “Does being assigned to the intervention reduce inflammation, regardless of whether participants fully complied?”. This reflects the real-world effectiveness including factors like dropout, low adherence, etc. This is the primary approach in most randomized trials because it preserves the randomization balance and avoids bias introduced by post-treatment variables.

In the current model, we are conditioning the effect of allocation_group on adherence. The coefficient for allocation_group in this case answers: “Given the same level of adherence (completion, dose, duration), is the intervention effective in reducing inflammation?” In other words, we’re stripping out the pathway by which poor adherence could dilute the intervention effect. If these variables are strong mediators of the intervention’s effect, you are blocking part of the effect of allocation_group, and this might explain why allocation_group is not significant.

**Correct Modeling Strategy**

Depends on our goal:

1.  To estimate the pure biological effect of the intervention (conditional on adherence):

    -   Keep compliance_score_adjusted, completed_intervention, and duration_difference in the model.
    -   Interpret the effect of allocation_group as the effect assuming equal adherence across groups.

2.  To estimate the real-world effectiveness (intention-to-treat):

    -   Remove the compliance-related variables from the model.
    -   The coefficient for allocation_group will capture the total effect, including any dilution due to poor adherence.

![](images/DAG: Relationship between Intervention, Compliance, and Inflammation.png)

The DAG (Directed Acyclic Graph) represents the causal relationships between the intervention, adherence, and inflammation. In this structure, Allocation Group has a direct effect on Inflammation (labs_crp) and also influences Compliance, Completed Intervention, and Duration Difference, which are measures of adherence. These adherence-related variables, in turn, affect Inflammation, indicating that part of the intervention’s effect is mediated through adherence. Additionally, a hypothetical Unmeasured Factors node, representing elements such as motivation, health status, or life circumstances, influences both Compliance and Inflammation. This creates a potential collider if the analysis conditions on adherence-related variables.

The DAG highlights that adjusting for compliance, completion, or duration blocks part of the natural causal pathway through which the intervention affects inflammation. Moreover, conditioning on these variables opens a backdoor path through Unmeasured Factors, introducing potential collider bias.

This structure demonstrates that the choice between intention-to-treat (ITT) and per-protocol (PP) analysis changes the research question. In ITT analysis, the effect of the Allocation Group on inflammation is estimated without conditioning on adherence, capturing the total effect, including both direct and adherence-mediated pathways. This approach preserves the benefits of randomization and estimates the real-world effectiveness of the intervention. In contrast, per-protocol analysis includes adherence-related variables in the model. This blocks the indirect pathways through adherence and estimates the effect of the intervention among participants with comparable adherence. While this approach can answer questions about biological efficacy conditional on adherence, it carries a higher risk of bias due to conditioning on post-randomization variables.

**Suggested Dual Approach (Best Practice in Clinical Research)**

1.  Primary Model (ITT) without compliance variables. This estimates whether the offer of the intervention reduces inflammation.

```
log1p(labs_crp) \~ allocation_group + visit + (1 \| record_id) + covariates
```

2.  Secondary Model (Per-Protocol Sensitivity Analysis) with compliance variables. This estimates whether the intervention works among those who actually adhered to it, or to account for variability in exposure.

```
log1p(labs_crp) \~ allocation_group + compliance_score_adjusted + duration_difference + completed_intervention + visit + (1 \| record_id) + covariates
```

**Important Note on Mediation vs. Confounding:**

-   Compliance is not a confounder — it occurs after randomization.
-   Conditioning on it changes the causal question.
-   Including post-randomization variables risks collider bias if those variables are influenced by both the intervention and unmeasured factors affecting inflammation.

**Final Recommendation for Writing in Thesis:**

The primary analysis was conducted under the intention-to-treat principle, evaluating the effect of the randomized intervention on inflammation regardless of adherence. A secondary model adjusted for adherence-related variables (completed_intervention, compliance_score_adjusted, and duration_difference) to explore whether the intervention had an effect among those who maintained adequate compliance. These models capture complementary aspects of intervention effectiveness: the former reflects real-world applicability, while the latter reflects efficacy conditional on adequate adherence. 

### Ideal condition

The first model (pcr_1) represents a per-protocol-type model, where the effect of the intervention (allocation_group) is estimated conditional on compliance (through compliance_score_adjusted, completed_intervention, and duration_difference). However, there are other methods that can estimate the effect of the intervention in an ideal condition, where adherence is perfect. These methods go beyond simply conditioning in regression and attempt to more rigorously isolate the causal effect.

**Alternative and Complementary Strategies to Per-Protocol Modeling**

*1. Restricting the Dataset (Complete Compliers Only)*

One simple but crude way to perform a per-protocol analysis is to exclude participants who did not complete the intervention or had poor compliance. This creates a model within a population that fully adhered. The limitations are: reduces sample size and breaks randomization, leading to confounding.

```
data_pp <- data_model_scaled %>%
  filter(completed_intervention == "Yes", compliance_score_adjusted >= threshold)

pcr_pp <- lmer(log1p(labs_crp) ~ allocation_group + visit + (1 | record_id) + covariates, data = data_pp)
```

```{r}
data_pp <- data_model_scaled %>%
  filter(
    completed_intervention == "Sim" &
      (compliance_score_adjusted > 0.6 | is.na(compliance_score_adjusted))
  )
```

#### Restrict dataset
```{r}
pcr_pp <- lmer(log1p(labs_crp) ~ allocation_group + duration_difference + visit + (1 | record_id) + age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia + drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score + alcohol_dose + kcal + labs_alt + labs_ggt + labs_ldl + labs_triglycerides + labs_hdl + labs_quick_index, data = data_pp)

summary(pcr_pp)
```

*2. Instrumental Variable (IV) Approach or Complier Average Causal Effect (CACE)*

Use allocation_group as an instrument for treatment receipt/adherence, under the assumption that randomization affects inflammation only via the intervention. This estimates the effect among compliers, without the collider bias introduced by directly conditioning on post-randomization variables. This estimates the effect of actually completing the intervention, using random allocation as an instrument. In R, this can be implemented using `ivreg()` from the {AER} package or {ivtools}. The syntax is: outcome ~ endogenous + exogenous | instrument + exogenous. However, ivreg does not handle random effects. It assumes independent observations. Since our data has repeated measures (record_id), we should either use only one observation per subject (e.g., endpoint value) or use cluster-robust standard errors to account for within-subject correlation.

Collapsing longitudinal data to one observation per subject for instrumental variable (IV) analysis can be done in multiple ways, each answering a slightly different causal question. The gold standard in biostatistics is the ANCOVA approach, which models the outcome at the final time point while adjusting for the baseline value. This has been shown to be statistically more powerful and less biased than simple change scores when baseline and outcome are correlated. Like in the example:

```
iv_model <- ivreg(
  log1p(crp_final) ~ completed_intervention + log1p(crp_baseline) + covariates |
  allocation_group + log1p(crp_baseline) + covariates,
  data = data_final
)
```

```{r}

# Extract CRP at baseline
data_baseline <- data_model_scaled %>%
  filter(visit == 1) %>%
  select(record_id, labs_crp) %>%
  rename(crp_baseline = labs_crp)

# Extract CRP at final visit
data_final <- data_model_scaled %>%
  group_by(record_id) %>%
  filter(visit == max(visit)) %>%  # This selects the final visit for each participant
  ungroup() %>%
  select(
    record_id, labs_crp, completed_intervention, compliance_score_adjusted,
    duration_difference, allocation_group, age, sex, hypertension, hypercholesterolemia,
    hypertrigliceridemia, drugs_w_loss, drugs_w_gain, mean_bp_mean, handgrip, evs_score,
    alcohol_dose, kcal, labs_alt, labs_ggt, labs_ldl, labs_triglycerides, labs_hdl, labs_quick_index
  ) %>%
  rename(crp_final = labs_crp)

data_iv <- data_final %>%
  left_join(data_baseline, by = "record_id")
```

**Primary IV model that estimates the total effect**

The primary IV model that estimates the total effect is designed to evaluate the causal impact of the intervention on inflammation (CRP) as a whole, capturing both the direct effects and any indirect effects mediated by changes in other physiological or metabolic parameters. This model uses random assignment (allocation_group) as an instrument for actual participation or completion of the intervention (completed_intervention), allowing for the estimation of the Complier Average Causal Effect (CACE).

The intent is to answer whether the intervention, when adhered to, leads to a reduction in inflammation, regardless of the biological pathways involved. It reflects the overall therapeutic effect, incorporating all mechanisms through which the intervention may influence CRP. This approach does not adjust for variables that could be affected by the intervention itself (such as blood pressure, lipid levels, or liver enzymes), ensuring that the total causal effect is not inadvertently blocked or biased by post-treatment variables.

#### IV

```{r}
library(AER)

iv_model_total <- ivreg(
  log1p(crp_final) ~ compliance_score_adjusted + log1p(crp_baseline) +
    age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia |
  allocation_group + log1p(crp_baseline) +
    age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia,
  data = data_iv
)

summary(iv_model_total)
```


*3. G-Computation / G-Formula*

Simulate the outcome under a hypothetical scenario where everyone perfectly adheres to the intervention. This provides an estimate of the expected outcome if all participants had fully complied. R packages: {gfoRmula}, {ltmle}.


*4. Marginal Structural Models (MSMs) with Inverse Probability Weighting (IPW)*

Weight participants based on their probability of adhering, creating a pseudo-population where adherence is independent of confounders. This corrects for time-varying confounding affected by prior treatment. This gives an estimate of the intervention effect had everyone adhered as expected. Basic structure using {ipw}:

#### IPW

Complete case analysis (default approach in IPW):

```{r}
library(ipw)

data_model_ipw <- data_model_scaled %>%
  drop_na(
    completed_intervention,
    age, sex, hypertension, hypercholesterolemia, hypertrigliceridemia,
    drugs_w_loss, drugs_w_gain, mean_bp_mean, handgrip, evs_score,
    alcohol_dose, kcal, labs_alt, labs_ggt, labs_ldl, labs_triglycerides,
    labs_hdl, labs_quick_index
  )

model_weights <- ipwpoint(
  exposure = completed_intervention,
  family = "binomial",
  link = "logit",
  denominator = ~ 
    age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia +
    drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score +
    alcohol_dose + kcal + labs_alt + labs_ggt + labs_ldl + labs_triglycerides +
    labs_hdl + labs_quick_index,
  data = data_model_ipw
)

```

Use simple imputation (if appropriate for your data). Be cautious: imputation is a valid strategy if missingness is assumed to be Missing At Random (MAR) and the variables used for imputation are adequate.

```{r}
library(mice)
data_model_ipw <- mice::complete(mice(data_model_scaled, m = 1))
```



*5. Bayesian Models with Compliance Modeling*

Build a hierarchical Bayesian model that explicitly includes a latent compliance variable. Allows direct modeling of counterfactual scenarios under perfect adherence. Add prior distributions reflecting assumptions about compliance mechanisms. Packages: {brms}, {rstanarm}.

Example idea:

```{r, eval=FALSE}
brm(log1p(labs_crp) ~ allocation_group + compliance_score_adjusted + visit + (1 | record_id) + covariates,
    data = data_model_scaled,
    family = gaussian())
```


*Ways to Make Your Current Model More Sensitive to the Intervention*

- Focus the population: subset to high compliers or exclude partial compliers.
- Model interactions: for example, allocation_group * compliance_score_adjusted to see whether the effect of the intervention depends on levels of compliance.
- Use longitudinal modeling more fully: include random slopes for visit to capture differential trajectories over time.
- Explore dose-response: instead of binary completed_intervention, use a continuous adherence measure (compliance_score_adjusted) to model the dose-response effect of adherence.
- Consider transforming the outcome if distributional assumptions are strained (though log1p() is already a robust choice for skewed variables like CRP).


# PAM

```{r}
pam_1 <- lmer(mean_bp_mean ~ (1 | record_id) + visit + allocation_group + completed_intervention + duration_difference + age + sex + hypertension + hypercholesterolemia + hypertrigliceridemia + drugs_w_loss + drugs_w_gain + mean_bp_mean + handgrip + evs_score + alcohol_dose + kcal + labs_crp + labs_alt + labs_ggt + labs_ldl + labs_triglycerides + labs_hdl + labs_quick_index, data = data_model_scaled)
```

